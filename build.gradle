

def getGitVersion(){
    def version = "git describe --tags --always --first-parent".execute().text.trim()
    version.contains('-') ? version[0..<version.indexOf('-')] + '-SNAPSHOT' : version
}

def getGitCredentials(){
    def process = "git credential fill".execute()
    def stream = new PrintStream(process.getOutputStream(), true)
    stream.println("url=https://github.com/")
    stream.close()

    process.text.trim().split("\n").collectEntries {it.split("=")}
}
def gitCredentials = getGitCredentials()

group = 'com.myworldvw'
version = getGitVersion()

def generatePlatformConfig(platformProject, skijaName, lwjglName, jfxName, obsidianName){

    def jfxVersion = 17

    platformProject.apply plugin: 'java-library'
    platformProject.apply plugin: 'maven-publish'

    platformProject.repositories {
        mavenCentral()
        maven {
            name = "Chipmunk"
            url = uri("https://maven.pkg.github.com/MyWorldLLC/Chipmunk")
            credentials {
                username = System.getenv("GITHUB_USER") ?: gitCredentials["username"]
                password = System.getenv("GITHUB_TOKEN") ?: gitCredentials["password"]
            }
        }
    }

    platformProject.dependencies {
        api project(':Obsidian')

        implementation "io.github.humbleui:skija-$skijaName:0.105.0"

        implementation "org.lwjgl:lwjgl-yoga:3.3.1:natives-$lwjglName"

        implementation "org.openjfx:javafx-base:$jfxVersion:$jfxName"
        implementation "org.openjfx:javafx-graphics:$jfxVersion:$jfxName"
        implementation "org.openjfx:javafx-controls:$jfxVersion:$jfxName"
        implementation "org.openjfx:javafx-web:$jfxVersion:$jfxName"
        implementation "org.openjfx:javafx-media:$jfxVersion:$jfxName"
    }

    platformProject.java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    platformProject.publishing {
        publications {
            maven(MavenPublication) {

                groupId = project.group
                artifactId = 'obsidian'
                version = project.version + "-$obsidianName"

                from platformProject.components.java
            }
        }
        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/MyWorldLLC/Packages")
                credentials {
                    username = System.getenv("GITHUB_USER") ?: gitCredentials["username"]
                    password = System.getenv("GITHUB_TOKEN") ?: gitCredentials["password"]
                }
            }
        }
    }
}

allprojects{
    ext{
        jfxVersion = '16'
        generatePlatformConfig = this.&generatePlatformConfig
    }
}