plugins {
    id 'java-library'
    id 'maven-publish'
}

dependencies {
    api project(':Obsidian')

    // We need the platform specific jars to build, since they contain
    // the module definitions. Note that the module definitions are
    // cross-platform, so we can just use whichever platform we're
    // building on. Dependencies for downstream consumers are handled
    // by the ObsidianJFX Platform modules.
    compileOnly "org.openjfx:javafx-base:$jfxVersion:$platform"
    compileOnly "org.openjfx:javafx-graphics:$jfxVersion:$platform"
    compileOnly "org.openjfx:javafx-controls:$jfxVersion:$platform"
    compileOnly "org.openjfx:javafx-web:$jfxVersion:$platform"
    compileOnly "org.openjfx:javafx-media:$jfxVersion:$platform"

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(jdkVersion)
    }
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.compilerArgs += [
            '--add-exports', 'javafx.graphics/com.sun.glass.ui=myworld.obsidian.jfx',
            '--add-exports', 'javafx.graphics/com.sun.javafx.cursor=myworld.obsidian.jfx',
            '--add-exports', 'javafx.graphics/com.sun.javafx.embed=myworld.obsidian.jfx',
            '--add-exports', 'javafx.graphics/com.sun.javafx.stage=myworld.obsidian.jfx',
            '--add-exports', 'javafx.graphics/com.sun.javafx.tk=myworld.obsidian.jfx'
    ]
}

javadoc {
    options.optionFiles(file('javadocOptions.txt'))
}

group = 'com.myworldvw'
version = gitVersion

publishing {
    publications {
        maven(MavenPublication){

            groupId = group
            artifactId = 'obsidian-jfx'
            version = version

            from components.java
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/MyWorldLLC/Packages")
            credentials {
                username = gitUser
                password = gitPassword
            }
        }
    }
}