plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

javafx {
    version = jfxVersion
    modules = ['javafx.graphics']
    configuration = 'compileOnly'
}

sourceSets {
    example {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDir 'example/java'
        }
    }
}

configurations {
    exampleImplementation.extendsFrom(implementation)
}

dependencies {

    implementation 'org.lwjgl:lwjgl-yoga:3.3.1'
    implementation "io.github.humbleui:skija-shared:0.105.0"
    implementation 'myworld:chipmunk:1.0.0-SNAPSHOT'

    exampleCompileClasspath 'org.lwjgl:lwjgl:3.3.1'
    exampleCompileClasspath 'org.lwjgl:lwjgl-glfw:3.3.1'
    exampleCompileClasspath 'org.lwjgl:lwjgl-opengl:3.3.1'
    exampleRuntimeOnly "io.github.humbleui:skija-$skijaPlatform:0.105.0"
    exampleRuntimeOnly "org.lwjgl:lwjgl:3.3.1:natives-$lwjglPlatform"
    exampleRuntimeOnly "org.lwjgl:lwjgl-glfw:3.3.1:natives-$lwjglPlatform"
    exampleRuntimeOnly "org.lwjgl:lwjgl-yoga:3.3.1:natives-$lwjglPlatform"
    exampleRuntimeOnly "org.lwjgl:lwjgl-opengl:3.3.1:natives-$lwjglPlatform"
    exampleRuntimeOnly "org.openjfx:javafx-base:$jfxVersion:$platform"
    exampleRuntimeOnly "org.openjfx:javafx-graphics:$jfxVersion:$platform"
    exampleRuntimeOnly "org.openjfx:javafx-controls:$jfxVersion:$platform"
    exampleRuntimeOnly "org.openjfx:javafx-web:$jfxVersion:$platform"
    exampleRuntimeOnly "org.openjfx:javafx-media:$jfxVersion:$platform"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(jdkVersion)
    }
    withJavadocJar()
    withSourcesJar()
}

group = 'com.myworldvw'
version = gitVersion

publishing {
    publications {
        maven(MavenPublication){

            groupId = group
            artifactId = 'obsidian'
            version = version

            from components.java
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/MyWorldLLC/Packages")
            credentials {
                username = gitUser
                password = gitPassword
            }
        }
    }
}

task run(type: JavaExec){
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(jdkVersion)
    }
    classpath = sourceSets.example.compileClasspath + sourceSets.example.runtimeClasspath
    mainClass = 'myworld.obsidian.example.ExampleRunner'
}